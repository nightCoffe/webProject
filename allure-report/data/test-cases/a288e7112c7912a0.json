{
  "uid" : "a288e7112c7912a0",
  "name" : "HostingNinjahOffer()",
  "fullName" : "tests.HostegramWithListener.HostingNinjahOffer",
  "historyId" : "3d829376d7c717158e7fe836b86ab520",
  "time" : {
    "start" : 1642183497169,
    "stop" : 1642183507894,
    "duration" : 10725
  },
  "description" : "",
  "status" : "failed",
  "statusMessage" : "Element should have text \"DEVELOPERS PLAN\" {.Post-body}\nElement: '<div class=\"Post-body\">HostNinjah is a small web hosting company founded on August 2020. Our vision for HostNinjah is to provide affordable yet reliable web hosting for Singaporeans. Although the branding \"HostNinjah\" is new, rest assured that the owner running the company is experienced in the web hosting industry. We start out small and grow together!\nThis is a special one off discount valid only until 31 January 2022. Use the code CNY22 to get an awesome 50% recurring discount (valid for annual payment only) on our shared hosting packages! Hurry Stocks are limited!\n  BASIC PLAN\n·        1 GB SSD Storage\n·        100 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $12/Year | Order Here\n  PREMIUM PLAN\n·        10 GB SSD Storage\n·        500 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $25/Year | Order Here\n  DEVELOPER PLAN\n·        50 GB SSD Storage\n·        UNMETERED Bandwidth\n·        cPanel Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Softaculous Auto Installer\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Germany \nOnly $125/Year | Order Here\n  █ HostNinjah - Singapore Premium Hosting\n█ RELIABLE & AFFORDABLE // 99.9% UPTIME!\nW: https://hostninjah.com | E: hello@hostninjah.com\n </div>'\nActual value: text=\"HostNinjah is a small web hosting company founded on August 2020. Our vision for HostNinjah is to provide affordable yet reliable web hosting for Singaporeans. Although the branding \"HostNinjah\" is new, rest assured that the owner running the company is experienced in the web hosting industry. We start out small and grow together!\nThis is a special one off discount valid only until 31 January 2022. Use the code CNY22 to get an awesome 50% recurring discount (valid for annual payment only) on our shared hosting packages! Hurry Stocks are limited!\n  BASIC PLAN\n·        1 GB SSD Storage\n·        100 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $12/Year | Order Here\n  PREMIUM PLAN\n·        10 GB SSD Storage\n·        500 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $25/Year | Order Here\n  DEVELOPER PLAN\n·        50 GB SSD Storage\n·        UNMETERED Bandwidth\n·        cPanel Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Softaculous Auto Installer\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Germany \nOnly $125/Year | Order Here\n  █ HostNinjah - Singapore Premium Hosting\n█ RELIABLE & AFFORDABLE // 99.9% UPTIME!\nW: https://hostninjah.com | E: hello@hostninjah.com\n \"\nScreenshot: file:/home/j/IdeaProjects/Hostegram/build/reports/tests/1642183507451.0.png\nPage source: file:/home/j/IdeaProjects/Hostegram/build/reports/tests/1642183507451.0.html\nTimeout: 4 s.",
  "statusTrace" : "Element should have text \"DEVELOPERS PLAN\" {.Post-body}\nElement: '<div class=\"Post-body\">HostNinjah is a small web hosting company founded on August 2020. Our vision for HostNinjah is to provide affordable yet reliable web hosting for Singaporeans. Although the branding \"HostNinjah\" is new, rest assured that the owner running the company is experienced in the web hosting industry. We start out small and grow together!\nThis is a special one off discount valid only until 31 January 2022. Use the code CNY22 to get an awesome 50% recurring discount (valid for annual payment only) on our shared hosting packages! Hurry Stocks are limited!\n  BASIC PLAN\n·        1 GB SSD Storage\n·        100 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $12/Year | Order Here\n  PREMIUM PLAN\n·        10 GB SSD Storage\n·        500 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $25/Year | Order Here\n  DEVELOPER PLAN\n·        50 GB SSD Storage\n·        UNMETERED Bandwidth\n·        cPanel Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Softaculous Auto Installer\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Germany \nOnly $125/Year | Order Here\n  █ HostNinjah - Singapore Premium Hosting\n█ RELIABLE & AFFORDABLE // 99.9% UPTIME!\nW: https://hostninjah.com | E: hello@hostninjah.com\n </div>'\nActual value: text=\"HostNinjah is a small web hosting company founded on August 2020. Our vision for HostNinjah is to provide affordable yet reliable web hosting for Singaporeans. Although the branding \"HostNinjah\" is new, rest assured that the owner running the company is experienced in the web hosting industry. We start out small and grow together!\nThis is a special one off discount valid only until 31 January 2022. Use the code CNY22 to get an awesome 50% recurring discount (valid for annual payment only) on our shared hosting packages! Hurry Stocks are limited!\n  BASIC PLAN\n·        1 GB SSD Storage\n·        100 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $12/Year | Order Here\n  PREMIUM PLAN\n·        10 GB SSD Storage\n·        500 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $25/Year | Order Here\n  DEVELOPER PLAN\n·        50 GB SSD Storage\n·        UNMETERED Bandwidth\n·        cPanel Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Softaculous Auto Installer\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Germany \nOnly $125/Year | Order Here\n  █ HostNinjah - Singapore Premium Hosting\n█ RELIABLE & AFFORDABLE // 99.9% UPTIME!\nW: https://hostninjah.com | E: hello@hostninjah.com\n \"\nScreenshot: file:/home/j/IdeaProjects/Hostegram/build/reports/tests/1642183507451.0.png\nPage source: file:/home/j/IdeaProjects/Hostegram/build/reports/tests/1642183507451.0.html\nTimeout: 4 s.\n\tat com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:127)\n\tat com.codeborne.selenide.commands.Should.execute(Should.java:30)\n\tat com.codeborne.selenide.commands.Should.execute(Should.java:14)\n\tat com.codeborne.selenide.commands.Commands.execute(Commands.java:155)\n\tat com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:131)\n\tat com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:83)\n\tat com.sun.proxy.$Proxy16.shouldHave(Unknown Source)\n\tat tests.HostegramWithListener.HostingNinjahOffer(HostegramWithListener.java:20)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:117)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat com.sun.proxy.$Proxy2.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:135)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "",
    "status" : "failed",
    "statusMessage" : "Element should have text \"DEVELOPERS PLAN\" {.Post-body}\nElement: '<div class=\"Post-body\">HostNinjah is a small web hosting company founded on August 2020. Our vision for HostNinjah is to provide affordable yet reliable web hosting for Singaporeans. Although the branding \"HostNinjah\" is new, rest assured that the owner running the company is experienced in the web hosting industry. We start out small and grow together!\nThis is a special one off discount valid only until 31 January 2022. Use the code CNY22 to get an awesome 50% recurring discount (valid for annual payment only) on our shared hosting packages! Hurry Stocks are limited!\n  BASIC PLAN\n·        1 GB SSD Storage\n·        100 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $12/Year | Order Here\n  PREMIUM PLAN\n·        10 GB SSD Storage\n·        500 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $25/Year | Order Here\n  DEVELOPER PLAN\n·        50 GB SSD Storage\n·        UNMETERED Bandwidth\n·        cPanel Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Softaculous Auto Installer\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Germany \nOnly $125/Year | Order Here\n  █ HostNinjah - Singapore Premium Hosting\n█ RELIABLE & AFFORDABLE // 99.9% UPTIME!\nW: https://hostninjah.com | E: hello@hostninjah.com\n </div>'\nActual value: text=\"HostNinjah is a small web hosting company founded on August 2020. Our vision for HostNinjah is to provide affordable yet reliable web hosting for Singaporeans. Although the branding \"HostNinjah\" is new, rest assured that the owner running the company is experienced in the web hosting industry. We start out small and grow together!\nThis is a special one off discount valid only until 31 January 2022. Use the code CNY22 to get an awesome 50% recurring discount (valid for annual payment only) on our shared hosting packages! Hurry Stocks are limited!\n  BASIC PLAN\n·        1 GB SSD Storage\n·        100 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $12/Year | Order Here\n  PREMIUM PLAN\n·        10 GB SSD Storage\n·        500 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $25/Year | Order Here\n  DEVELOPER PLAN\n·        50 GB SSD Storage\n·        UNMETERED Bandwidth\n·        cPanel Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Softaculous Auto Installer\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Germany \nOnly $125/Year | Order Here\n  █ HostNinjah - Singapore Premium Hosting\n█ RELIABLE & AFFORDABLE // 99.9% UPTIME!\nW: https://hostninjah.com | E: hello@hostninjah.com\n \"\nScreenshot: file:/home/j/IdeaProjects/Hostegram/build/reports/tests/1642183507451.0.png\nPage source: file:/home/j/IdeaProjects/Hostegram/build/reports/tests/1642183507451.0.html\nTimeout: 4 s.",
    "statusTrace" : "Element should have text \"DEVELOPERS PLAN\" {.Post-body}\nElement: '<div class=\"Post-body\">HostNinjah is a small web hosting company founded on August 2020. Our vision for HostNinjah is to provide affordable yet reliable web hosting for Singaporeans. Although the branding \"HostNinjah\" is new, rest assured that the owner running the company is experienced in the web hosting industry. We start out small and grow together!\nThis is a special one off discount valid only until 31 January 2022. Use the code CNY22 to get an awesome 50% recurring discount (valid for annual payment only) on our shared hosting packages! Hurry Stocks are limited!\n  BASIC PLAN\n·        1 GB SSD Storage\n·        100 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $12/Year | Order Here\n  PREMIUM PLAN\n·        10 GB SSD Storage\n·        500 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $25/Year | Order Here\n  DEVELOPER PLAN\n·        50 GB SSD Storage\n·        UNMETERED Bandwidth\n·        cPanel Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Softaculous Auto Installer\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Germany \nOnly $125/Year | Order Here\n  █ HostNinjah - Singapore Premium Hosting\n█ RELIABLE & AFFORDABLE // 99.9% UPTIME!\nW: https://hostninjah.com | E: hello@hostninjah.com\n </div>'\nActual value: text=\"HostNinjah is a small web hosting company founded on August 2020. Our vision for HostNinjah is to provide affordable yet reliable web hosting for Singaporeans. Although the branding \"HostNinjah\" is new, rest assured that the owner running the company is experienced in the web hosting industry. We start out small and grow together!\nThis is a special one off discount valid only until 31 January 2022. Use the code CNY22 to get an awesome 50% recurring discount (valid for annual payment only) on our shared hosting packages! Hurry Stocks are limited!\n  BASIC PLAN\n·        1 GB SSD Storage\n·        100 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $12/Year | Order Here\n  PREMIUM PLAN\n·        10 GB SSD Storage\n·        500 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $25/Year | Order Here\n  DEVELOPER PLAN\n·        50 GB SSD Storage\n·        UNMETERED Bandwidth\n·        cPanel Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Softaculous Auto Installer\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Germany \nOnly $125/Year | Order Here\n  █ HostNinjah - Singapore Premium Hosting\n█ RELIABLE & AFFORDABLE // 99.9% UPTIME!\nW: https://hostninjah.com | E: hello@hostninjah.com\n \"\nScreenshot: file:/home/j/IdeaProjects/Hostegram/build/reports/tests/1642183507451.0.png\nPage source: file:/home/j/IdeaProjects/Hostegram/build/reports/tests/1642183507451.0.html\nTimeout: 4 s.\n\tat com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:127)\n\tat com.codeborne.selenide.commands.Should.execute(Should.java:30)\n\tat com.codeborne.selenide.commands.Should.execute(Should.java:14)\n\tat com.codeborne.selenide.commands.Commands.execute(Commands.java:155)\n\tat com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:131)\n\tat com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:83)\n\tat com.sun.proxy.$Proxy16.shouldHave(Unknown Source)\n\tat tests.HostegramWithListener.HostingNinjahOffer(HostegramWithListener.java:20)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:117)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat com.sun.proxy.$Proxy2.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:135)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
    "steps" : [ {
      "name" : "$(\"open\") https://hostegram.com/",
      "time" : {
        "start" : 1642183497285,
        "stop" : 1642183502473,
        "duration" : 5188
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "$(\".item-tag2\") click()",
      "time" : {
        "start" : 1642183502555,
        "stop" : 1642183502756,
        "duration" : 201
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "$(\"[data-id='19']\") click()",
      "time" : {
        "start" : 1642183502756,
        "stop" : 1642183503282,
        "duration" : 526
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "$(\".Post-body\") should have([text \"BASIC PLAN\", text \"PREMIUM PLAN\", text \"DEVELOPERS PLAN\"])",
      "time" : {
        "start" : 1642183503284,
        "stop" : 1642183507884,
        "duration" : 4600
      },
      "status" : "failed",
      "statusMessage" : "Element should have text \"DEVELOPERS PLAN\" {.Post-body}\nElement: '<div class=\"Post-body\">HostNinjah is a small web hosting company founded on August 2020. Our vision for HostNinjah is to provide affordable yet reliable web hosting for Singaporeans. Although the branding \"HostNinjah\" is new, rest assured that the owner running the company is experienced in the web hosting industry. We start out small and grow together!\nThis is a special one off discount valid only until 31 January 2022. Use the code CNY22 to get an awesome 50% recurring discount (valid for annual payment only) on our shared hosting packages! Hurry Stocks are limited!\n  BASIC PLAN\n·        1 GB SSD Storage\n·        100 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $12/Year | Order Here\n  PREMIUM PLAN\n·        10 GB SSD Storage\n·        500 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $25/Year | Order Here\n  DEVELOPER PLAN\n·        50 GB SSD Storage\n·        UNMETERED Bandwidth\n·        cPanel Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Softaculous Auto Installer\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Germany \nOnly $125/Year | Order Here\n  █ HostNinjah - Singapore Premium Hosting\n█ RELIABLE & AFFORDABLE // 99.9% UPTIME!\nW: https://hostninjah.com | E: hello@hostninjah.com\n </div>'\nActual value: text=\"HostNinjah is a small web hosting company founded on August 2020. Our vision for HostNinjah is to provide affordable yet reliable web hosting for Singaporeans. Although the branding \"HostNinjah\" is new, rest assured that the owner running the company is experienced in the web hosting industry. We start out small and grow together!\nThis is a special one off discount valid only until 31 January 2022. Use the code CNY22 to get an awesome 50% recurring discount (valid for annual payment only) on our shared hosting packages! Hurry Stocks are limited!\n  BASIC PLAN\n·        1 GB SSD Storage\n·        100 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $12/Year | Order Here\n  PREMIUM PLAN\n·        10 GB SSD Storage\n·        500 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $25/Year | Order Here\n  DEVELOPER PLAN\n·        50 GB SSD Storage\n·        UNMETERED Bandwidth\n·        cPanel Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Softaculous Auto Installer\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Germany \nOnly $125/Year | Order Here\n  █ HostNinjah - Singapore Premium Hosting\n█ RELIABLE & AFFORDABLE // 99.9% UPTIME!\nW: https://hostninjah.com | E: hello@hostninjah.com\n \"\nScreenshot: file:/home/j/IdeaProjects/Hostegram/build/reports/tests/1642183507451.0.png\nPage source: file:/home/j/IdeaProjects/Hostegram/build/reports/tests/1642183507451.0.html\nTimeout: 4 s.",
      "statusTrace" : "Element should have text \"DEVELOPERS PLAN\" {.Post-body}\nElement: '<div class=\"Post-body\">HostNinjah is a small web hosting company founded on August 2020. Our vision for HostNinjah is to provide affordable yet reliable web hosting for Singaporeans. Although the branding \"HostNinjah\" is new, rest assured that the owner running the company is experienced in the web hosting industry. We start out small and grow together!\nThis is a special one off discount valid only until 31 January 2022. Use the code CNY22 to get an awesome 50% recurring discount (valid for annual payment only) on our shared hosting packages! Hurry Stocks are limited!\n  BASIC PLAN\n·        1 GB SSD Storage\n·        100 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $12/Year | Order Here\n  PREMIUM PLAN\n·        10 GB SSD Storage\n·        500 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $25/Year | Order Here\n  DEVELOPER PLAN\n·        50 GB SSD Storage\n·        UNMETERED Bandwidth\n·        cPanel Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Softaculous Auto Installer\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Germany \nOnly $125/Year | Order Here\n  █ HostNinjah - Singapore Premium Hosting\n█ RELIABLE & AFFORDABLE // 99.9% UPTIME!\nW: https://hostninjah.com | E: hello@hostninjah.com\n </div>'\nActual value: text=\"HostNinjah is a small web hosting company founded on August 2020. Our vision for HostNinjah is to provide affordable yet reliable web hosting for Singaporeans. Although the branding \"HostNinjah\" is new, rest assured that the owner running the company is experienced in the web hosting industry. We start out small and grow together!\nThis is a special one off discount valid only until 31 January 2022. Use the code CNY22 to get an awesome 50% recurring discount (valid for annual payment only) on our shared hosting packages! Hurry Stocks are limited!\n  BASIC PLAN\n·        1 GB SSD Storage\n·        100 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $12/Year | Order Here\n  PREMIUM PLAN\n·        10 GB SSD Storage\n·        500 GB Bandwidth\n·        DirectAdmin Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Installatron & RVSitebuilder\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Singapore \nOnly $25/Year | Order Here\n  DEVELOPER PLAN\n·        50 GB SSD Storage\n·        UNMETERED Bandwidth\n·        cPanel Control Panel\n·        Unlimited Domains\n·        Unlimited Parked Domains\n·        Unlimited Subdomains\n·        Unlimited FTP Accounts\n·        Unlimited MySQL Databases\n·        Softaculous Auto Installer\n·        LiteSpeed Web Server\n·        CloudLinux System\n·        DDoS Protection\n·        Hosted In Germany \nOnly $125/Year | Order Here\n  █ HostNinjah - Singapore Premium Hosting\n█ RELIABLE & AFFORDABLE // 99.9% UPTIME!\nW: https://hostninjah.com | E: hello@hostninjah.com\n \"\nScreenshot: file:/home/j/IdeaProjects/Hostegram/build/reports/tests/1642183507451.0.png\nPage source: file:/home/j/IdeaProjects/Hostegram/build/reports/tests/1642183507451.0.html\nTimeout: 4 s.\n\tat com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:127)\n\tat com.codeborne.selenide.commands.Should.execute(Should.java:30)\n\tat com.codeborne.selenide.commands.Should.execute(Should.java:14)\n\tat com.codeborne.selenide.commands.Commands.execute(Commands.java:155)\n\tat com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:131)\n\tat com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:83)\n\tat com.sun.proxy.$Proxy16.shouldHave(Unknown Source)\n\tat tests.HostegramWithListener.HostingNinjahOffer(HostegramWithListener.java:20)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:117)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat com.sun.proxy.$Proxy2.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:135)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "ae3a313b4c3d2872",
        "name" : "Screenshot",
        "source" : "ae3a313b4c3d2872.png",
        "type" : "image/png",
        "size" : 97054
      }, {
        "uid" : "45ba42f0f7c97c9d",
        "name" : "Page source",
        "source" : "45ba42f0f7c97c9d.html",
        "type" : "text/html",
        "size" : 217738
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "ubuntu"
  }, {
    "name" : "thread",
    "value" : "35778@ubuntu.Test worker(11)"
  }, {
    "name" : "framework",
    "value" : "junit-platform"
  }, {
    "name" : "language",
    "value" : "java"
  }, {
    "name" : "package",
    "value" : "tests.HostegramWithListener"
  }, {
    "name" : "testClass",
    "value" : "tests.HostegramWithListener"
  }, {
    "name" : "testMethod",
    "value" : "HostingNinjahOffer"
  }, {
    "name" : "suite",
    "value" : "tests.HostegramWithListener"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "a288e7112c7912a0.json",
  "parameterValues" : [ ]
}